3.2.14 (Media Mark)
21d42a84dc647c05a6c456d76fdc79e2357a28fe
o:Sass::Tree::RootNode
:@template"å/@import "../functions";
//
// Foundation Variables
//


$experimental: true !default;

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it affect the grid breakpoints,
// set $rem-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base rem value.
$rem-base: 16px !default;

// Use Open Sans font
$include-open-sans: true !default;

//
// Global Foundation Mixins
//

// @mixins
//
// We use this to control border radius.
// $radius - Default: $global-radius || 4px
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// @mixins
//
// We use this to create equal side border radius on elements.
// $side - Options: left, right, top, bottom
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// @mixins
//
// We can control whether or not we have inset shadows edges.
// $active - Default: true, Options: false
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// @mixins
//
// We use this to add transitions to elements
// $property - Default: all, Options: http://www.w3.org/TR/css3-transitions/#animatable-properties
// $speed - Default: 300ms
// $ease - Default:ease-out, Options: http://css-tricks.com/almanac/properties/t/transition-timing-function/
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// @mixins
//
// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// @mixins
//
// We use this to create equilateral triangles
// $triangle-size - Used to set border-size. No default, set a px or em size.
// $triangle-color - Used to set border-color which makes up triangle. No default
// $triangle-direction - Used to determine which direction triangle points. Options: top, bottom, left, right
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

// @mixins
//
// We use this to add a glowing effect to block elements
// $selector - Used for selector state. Default: focus, Options: hover, active, visited
// $fade-time - Default: 300ms
// $glowing-effect-color - Default: fade-out($primary-color, .25)
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #008CBA !default;
$secondary-color: #e7e7e7 !default;
$alert-color: #f04124 !default;
$success-color: #43AC6A !default;
$warning-color: #f08a24 !default;
$info-color: #a0d3e8 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;


// Media Query Ranges
$small-range: (0em, 40em);
$medium-range: (40.063em, 64em);
$large-range: (64.063em, 90em);
$xlarge-range: (90.063em, 120em);
$xxlarge-range: (120.063em);


$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

// Legacy
$small: $medium-up;
$medium: $medium-up;
$large: $large-up;


//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@include exports("global") {
  @if $include-open-sans {
    @import url("//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700italic,400,300,700");
  }
  // Used to provide media query values for javascript components.
  // Forward slash placed around everything to convince PhantomJS to read the value.
  meta.foundation-mq-small {
    font-family: "/" + unquote($small-only) + "/";
    width: lower-bound($small-range);
  }

  meta.foundation-mq-medium {
    font-family: "/" + unquote($medium-only) + "/";
    width: lower-bound($medium-range);
  }

  meta.foundation-mq-large {
    font-family: "/" + unquote($large-up) + "/";
    width: lower-bound($large-range);
  }

  meta.foundation-mq-xlarge {
    font-family: "/" + unquote($xlarge-up) + "/";
    width: lower-bound($xlarge-range);
  }

  meta.foundation-mq-xxlarge {
    font-family: "/" + unquote($xxlarge-up) + "/";
    width: lower-bound($xxlarge-range);
  }

  @if $include-html-global-classes {

    // Set box-sizing globally to handle padding and border widths
    *,
    *:before,
    *:after {
      @include box-sizing(border-box);
    }

    html,
    body { font-size: $base-font-size; }

    // Default body styles
    body {
      background: $body-bg;
      color: $body-font-color;
      padding: 0;
      margin: 0;
      font-family: $body-font-family;
      font-weight: $body-font-weight;
      font-style: $body-font-style;
      line-height: 1; // Set to $base-line-height to take on browser default of 150%
      position: relative;
      cursor: $cursor-default-value;
    }

  a:hover { cursor: $cursor-pointer-value; }

    // Grid Defaults to get images and embeds to work properly
    img,
    object,
    embed { max-width: 100%; height: auto; }

    object,
    embed { height: 100%; }
    img { -ms-interpolation-mode: bicubic; }

    #map_canvas,
    .map_canvas {
      img,
      embed,
      object { max-width: none !important;
      }
    }

    // Miscellaneous useful HTML classes
    .left   { float: left !important; }
    .right  { float: right !important; }
    .clearfix     { @include clearfix; }
    .text-left    { text-align: left !important; }
    .text-right   { text-align: right !important; }
    .text-center  { text-align: center !important; }
    .text-justify { text-align: justify !important; }
    .hide         { display: none; }

    // Font smoothing
    // Antialiased font smoothing works best for light text on a dark background.
    // Apply to single elements instead of globally to body.
    // Note this only applies to webkit-based desktop browsers on the Mac.
    .antialiased { -webkit-font-smoothing: antialiased; }

    // Get rid of gap under images by making them display: inline-block; by default
    img {
      display: inline-block;
      vertical-align: middle;
    }

    //
    // Global resets for forms
    //

    // Make sure textarea takes on height automatically
    textarea { height: auto; min-height: 50px; }

    // Make select elements 100% width by default
    select { width: 100%; }
  }
}:@options{ :@has_childrenT:
@linei:@children[`o:Sass::Tree::ImportNode;0;@:@imported_file0;	i;
[ :@imported_filename"../functionso:Sass::Tree::CommentNode
:@value["%/*
 * Foundation Variables
 * */;@:
@type:silent;	i;
[ o:Sass::Tree::VariableNode:
@expro:Sass::Script::Bool;T;@;	i:
@name"experimental;@;	i;
[ :@guarded"!defaulto;
;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;@;;;	i;
[ o;
;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it affect the grid breakpoints,
 * set $rem-base to $base-font-size and make sure $base-font-size is a px value. */;@;;;	i;
[ o;;o:Sass::Script::Number:@denominator_units[ :@numerator_units["%;ii;@:@original"	100%;	i;"base-font-size;@;	i;
[ ;"!defaulto;
;["B/* $base-line-height is 24px while $base-font-size is 16px */;@;;;	i;
[ o;;o;;[ ;["%;i;@;"	150%;	i;"base-line-height;@;	i;
[ ;"!defaulto;
;["N/* This is the default html and body font-size for the base rem value. */;@;;;	i;
[ o;;o;;[ ;["px;i;@;"	16px;	i;"rem-base;@;	i;
[ ;"!defaulto;
;["/* Use Open Sans font */;@;;;	i;
[ o;;o;;T;@;	i;"include-open-sans;@;	i;
[ ;"!defaulto;
;[")/*
 * Global Foundation Mixins
 * */;@;;;	i;
[ o;
;["j/* @mixins
 *
 * We use this to control border radius.
 * $radius - Default: $global-radius || 4px */;@;;;	i#;
[ o:Sass::Tree::MixinDefNode;"radius:@splat0;@;T:
@args[[o:Sass::Script::Variable:@underscored_name"radius;"radius;@o;	;"global_radius;"global-radius;@;	i';	i';
[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:@underscored_name"radius:
@name"radius:@options{ :
@linei(0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@linei)0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-border-radius:@valueo; 	;"radius;"radius;@	;	i*;@	;	i*:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;["border-radius:@valueo; 	;"radius;"radius;@	;	i,;@	;	i,:
@tabsi :@children[ o;
;["|/* @mixins
 *
 * We use this to create equal side border radius on elements.
 * $side - Options: left, right, top, bottom */;@;;;	i0;
[ o;;"side-radius;0;@;T;[[o;;"	side;"	side;@0[o;;"radius;"radius;@o;	;"global_radius;"global-radius;@;	i4;	i4;
[u; õ[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"	left;@:
@type:identifier:
@linei5;i5:@operand1o:Sass::Script::Variable	:@underscored_name"	side:
@name"	side;@;i5u:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"
right;@:
@type:identifier:
@linei?;i?:@operand1o:Sass::Script::Variable	:@underscored_name"	side:
@name"	side;@;i?u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"top;@:
@type:identifier:
@lineiI;iI:@operand1o:Sass::Script::Variable	:@underscored_name"	side:
@name"	side;@;iIu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"bottom;@:
@type:identifier:
@lineiS;iS:@operand1o:Sass::Script::Variable	:@underscored_name"	side:
@name"	side;@;iS0[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@lineiT0[	o:Sass::Tree::PropNode:@prop_syntax:new;["#-moz-border-radius-bottomright:@valueo; 	;"radius;"radius;@	;	iU;@	;	iU:
@tabsi :@children[ o;
;;;[""-moz-border-radius-bottomleft;o; 	;"radius;"radius;@	;	iV;@	;	iV;i ;[ o;
;;;["'-webkit-border-bottom-right-radius;o; 	;"radius;"radius;@	;	iW;@	;	iW;i ;[ o;
;;;["&-webkit-border-bottom-left-radius;o; 	;"radius;"radius;@	;	iX;@	;	iX;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;["border-bottom-right-radius;o;	;"radius;"radius;@;iZ;@;iZ:
@tabsi :@children[ o;;;;["border-bottom-left-radius;o;	;"radius;"radius;@;i[;@;i[;i ;[ [u;[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@lineiJ0[	o:Sass::Tree::PropNode:@prop_syntax:new;[" -moz-border-radius-topright:@valueo; 	;"radius;"radius;@	;	iK;@	;	iK:
@tabsi :@children[ o;
;;;["-moz-border-radius-topleft;o; 	;"radius;"radius;@	;	iL;@	;	iL;i ;[ o;
;;;["$-webkit-border-top-right-radius;o; 	;"radius;"radius;@	;	iM;@	;	iM;i ;[ o;
;;;["#-webkit-border-top-left-radius;o; 	;"radius;"radius;@	;	iN;@	;	iN;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;["border-top-right-radius;o;	;"radius;"radius;@;iP;@;iP:
@tabsi :@children[ o;;;;["border-top-left-radius;o;	;"radius;"radius;@;iQ;@;iQ;i ;[ [u;[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@linei@0[	o:Sass::Tree::PropNode:@prop_syntax:new;[" -moz-border-radius-topright:@valueo; 	;"radius;"radius;@	;	iA;@	;	iA:
@tabsi :@children[ o;
;;;["#-moz-border-radius-bottomright;o; 	;"radius;"radius;@	;	iB;@	;	iB;i ;[ o;
;;;["$-webkit-border-top-right-radius;o; 	;"radius;"radius;@	;	iC;@	;	iC;i ;[ o;
;;;["'-webkit-border-bottom-right-radius;o; 	;"radius;"radius;@	;	iD;@	;	iD;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;["border-top-right-radius;o;	;"radius;"radius;@;iF;@;iF:
@tabsi :@children[ o;;;;["border-bottom-right-radius;o;	;"radius;"radius;@;iG;@;iG;i ;[ [u;[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@linei60[	o:Sass::Tree::PropNode:@prop_syntax:new;[""-moz-border-radius-bottomleft:@valueo; 	;"radius;"radius;@	;	i7;@	;	i7:
@tabsi :@children[ o;
;;;["-moz-border-radius-topleft;o; 	;"radius;"radius;@	;	i8;@	;	i8;i ;[ o;
;;;["&-webkit-border-bottom-left-radius;o; 	;"radius;"radius;@	;	i9;@	;	i9;i ;[ o;
;;;["#-webkit-border-top-left-radius;o; 	;"radius;"radius;@	;	i:;@	;	i:;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;["border-bottom-left-radius;o;	;"radius;"radius;@;i<;@;i<:
@tabsi :@children[ o;;;;["border-top-left-radius;o;	;"radius;"radius;@;i=;@;i=;i ;[ o;
;["~/* @mixins
 *
 * We can control whether or not we have inset shadows edges.
 * $active - Default: true, Options: false */;@;;;	i_;
[ o;;"inset-shadow;0;@;T;[[o;;"active;"active;@o;;T;@;	ic;	ic;
[u; ¬[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@lineid0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-box-shadow:@valueo:Sass::Script::List	;[o; 	;"shiny_edge_size;"shiny-edge-size;@	;	ieo; 	;"shiny_edge_color;"shiny-edge-color;@	;	ieo:Sass::Script::String	;"
inset;@	:
@type:identifier;	ie;@	;	ie:@separator:
space;@	;	ie:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;["box-shadow;o:Sass::Script::List	;[o;	;"shiny_edge_size;"shiny-edge-size;@;	igo;	;"shiny_edge_color;"shiny-edge-color;@;	igo:Sass::Script::String	;"
inset;@;:identifier;	ig;@;	ig:@separator:
space;@;	ig:
@tabsi ;
[ u; ò[o:Sass::Script::Variable	:@underscored_name"active:
@name"active:@options{ :
@lineii0[o:Sass::Tree::RuleNode:
@rule["&:active:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Parent:@filename" ;	iio:Sass::Selector::Pseudo
;["active:@syntactic_type:
class;@;	ii:	@arg0;@;	ii;@;	ii;@	:@has_childrenT;	ii:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@lineij0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-box-shadow:@valueo:Sass::Script::List	;[o; 	;"shiny_edge_size;"shiny-edge-size;@	;	iko; 	;"shiny_edge_active_color;"shiny-edge-active-color;@	;	iko:Sass::Script::String	;"
inset;@	:
@type:identifier;	ik;@	;	ik:@separator:
space;@	;	ik:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;["box-shadow:@valueo:Sass::Script::List	;"[o; 	;"shiny_edge_size;"shiny-edge-size;@	;	imo; 	;"shiny_edge_active_color;"shiny-edge-active-color;@	;	imo:Sass::Script::String	;""
inset;@	:
@type:identifier;	im;@	;	im:@separator:
space;@	;	im;i ;[ o;
;[")/* @mixins
 *
 * We use this to add transitions to elements
 * $property - Default: all, Options: http://www.w3.org/TR/css3-transitions/#animatable-properties
 * $speed - Default: 300ms
 * $ease - Default:ease-out, Options: http://css-tricks.com/almanac/properties/t/transition-timing-function/ */;@;;;	ip;
[ o;;"single-transition;0;@;T;[[o;;"property;"property;@o;%	;"all;@;;&;	iv[o;;"
speed;"
speed;@o;;[ ;["ms;i,;@;"
300ms;	iv[o;;"	ease;"	ease;@o;%	;"ease-out;@;;&;	iv;	iv;
[u; 	[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@lineiw0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-transition:@valueo:Sass::Script::List	;[o; 	;"property;"property;@	;	ixo; 	;"
speed;"
speed;@	;	ixo; 	;"	ease;"	ease;@	;	ix;@	;	ix:@separator:
space;@	;	ix:
@tabsi :@children[ o;
;;;["-moz-transition;o;	;[o; 	;"property;"property;@	;	iyo; 	;"
speed;"
speed;@	;	iyo; 	;"	ease;"	ease;@	;	iy;@	;	iy;;;@	;	iy;i ;[ o;!;";#;["transition;o;$	;[o;	;"property;"property;@;	i{o;	;"
speed;"
speed;@;	i{o;	;"	ease;"	ease;@;	i{;@;	i{;';(;@;	i{;)i ;
[ o;
;["N/* @mixins
 *
 * We use this to add box-sizing across browser prefixes */;@;;;	i~;
[ o;;"box-sizing;0;@;T;[[o;;"	type;"	type;@o;%	;"border-box;@;;&;	i|;	i|;
[u; A[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@linei}0[o:Sass::Tree::PropNode:@prop_syntax:new;["-moz-box-sizing:@valueo; 	;"	type;"	type;@	;	i~;@	;	i~:
@tabsi :@children[ o;
;;;["-webkit-box-sizing;o; 	;"	type;"	type;@	;	i;@	;	i;i ;[ o;!;";#;["box-sizing;o;	;"	type;"	type;@;	i;@;	i;)i ;
[ o;
;["M/* @mixins
 *
 * We use this to create equilateral triangles
 * $triangle-size - Used to set border-size. No default, set a px or em size.
 * $triangle-color - Used to set border-color which makes up triangle. No default
 * $triangle-direction - Used to determine which direction triangle points. Options: top, bottom, left, right */;@;;;	i;
[ o;;"css-triangle;0;@;T;[[o;;"triangle_size;"triangle-size;@0[o;;"triangle_color;"triangle-color;@0[o;;"triangle_direction;"triangle-direction;@0;	i;
[o;!;";#;["content;o;%;""";@;;&;@;	i;)i ;
[ o;!;";#;["display;o;%;"
block;@;;&;@;	i;)i ;
[ o;!;";#;["
width;o;%;"0;@;;&;@;	i;)i ;
[ o;!;";#;["height;o;%;"0;@;;&;@;	i;)i ;
[ o;!;";#;["border;o;$	;[o;%	;"
inset;@;;&;	io;	;"triangle_size;"triangle-size;@;	i;@;	i;';(;@;	i;)i ;
[ u; n[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"top;@:
@type:identifier:
@linei;i:@operand1o:Sass::Script::Variable	:@underscored_name"triangle_direction:
@name"triangle-direction;@;i0[o:Sass::Tree::PropNode:@prop_syntax:new;["border-color;o:Sass::Script::List	;[	o;	;"triangle_color;"triangle-color;@;io;
	;"transparent;@;;;io;
	;"transparent;@;;;io;
	;"transparent;@;;;i;@;i:@separator:
space;@;i:
@tabsi :@children[ o;;;;["border-top-style;o;
;"
solid;@;;;@;i;i ;[ u; t[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"bottom;@:
@type:identifier:
@linei;i:@operand1o:Sass::Script::Variable	:@underscored_name"triangle_direction:
@name"triangle-direction;@;i0[o:Sass::Tree::PropNode:@prop_syntax:new;["border-color;o:Sass::Script::List	;[	o;
	;"transparent;@;;;io;
	;"transparent;@;;;io;	;"triangle_color;"triangle-color;@;io;
	;"transparent;@;;;i;@;i:@separator:
space;@;i:
@tabsi :@children[ o;;;;["border-bottom-style;o;
;"
solid;@;;;@;i;i ;[ u; p[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"	left;@:
@type:identifier:
@linei;i:@operand1o:Sass::Script::Variable	:@underscored_name"triangle_direction:
@name"triangle-direction;@;i0[o:Sass::Tree::PropNode:@prop_syntax:new;["border-color;o:Sass::Script::List	;[	o;
	;"transparent;@;;;io;
	;"transparent;@;;;io;
	;"transparent;@;;;io;	;"triangle_color;"triangle-color;@;i;@;i:@separator:
space;@;i:
@tabsi :@children[ o;;;;["border-left-style;o;
;"
solid;@;;;@;i;i ;[ u; r[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"
right;@:
@type:identifier:
@linei;i:@operand1o:Sass::Script::Variable	:@underscored_name"triangle_direction:
@name"triangle-direction;@;i0[o:Sass::Tree::PropNode:@prop_syntax:new;["border-color;o:Sass::Script::List	;[	o;
	;"transparent;@;;;io;	;"triangle_color;"triangle-color;@;io;
	;"transparent;@;;;io;
	;"transparent;@;;;i;@;i:@separator:
space;@;i:
@tabsi :@children[ o;;;;["border-right-style;o;
;"
solid;@;;;@;i;i ;[ o;
;[")/* We use this to do clear floats */;@;;;	i¢;
[ o;;"clearfix;0;@;T;[ ;	i£;
[o;!;";#;["
*zoom;o;%;"1;@;;&;@;	i¤;)i ;
[ o:Sass::Tree::RuleNode:
@rule["&:before, &:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;.[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;.[o:Sass::Selector::Parent:@filename" ;	i¥o:Sass::Selector::Pseudo
;["before:@syntactic_type:
class;6@!;	i¥:	@arg0;6@!;	i¥o;/;.[o;0
;1o;2;3{ ;40;.[o;5;6@!;	i¥o;7
;["
after;8;9;6@!;	i¥;:0;6@!;	i¥;6@!;	i¥;@;T;	i¥;)i ;
[o;!;";#;["content;o;%;"" ";@;;&;@;	i¥;)i ;
[ o;!;";#;["display;o;%;"
table;@;;&;@;	i¥;)i ;
[ o;*;+["&:after;,o;-;.[o;/;.[o;0
;1o;2;3{ ;40;.[o;5;6" ;	i¦o;7
;["
after;8;9;6@H;	i¦;:0;6@H;	i¦;6@H;	i¦;@;T;	i¦;)i ;
[o;!;";#;["
clear;o;%;"	both;@;;&;@;	i¦;)i ;
[ o;
;["/* @mixins
 *
 * We use this to add a glowing effect to block elements
 * $selector - Used for selector state. Default: focus, Options: hover, active, visited
 * $fade-time - Default: 300ms
 * $glowing-effect-color - Default: fade-out($primary-color, .25) */;@;;;	i©;
[ o;;"block-glowing-effect;0;@;T;[[o;;"selector;"selector;@o;%	;"
focus;@;;&;	i¯[o;;"fade_time;"fade-time;@o;;[ ;["ms;i,;@;"
300ms;	i¯[o;;"glowing_effect_color;"glowing-effect-color;@o:Sass::Script::Funcall;"fade-out;0;@;[o;	;"primary_color;"primary-color;@;	i¯o;;[ ;[ ;f	0.25;@;"	0.25;	i¯;	i¯:@keywords{ ;	i¯;
[u; 7[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@linei°0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-transition:@valueo:Sass::Script::List	;[o;	;[o:Sass::Script::String	;"-webkit-box-shadow;@	:
@type:identifier;	i±o; 	;"fade_time;"fade-time;@	;	i±;@	;	i±:@separator:
spaceo;	;[o;	;"border-color;@	;;;	i±o; 	;"fade_time;"fade-time;@	;	i±o;	;"ease-in-out;@	;;;	i±;@	;	i±;;;@	;	i±;:
comma;@	;	i±:
@tabsi :@children[ o;
;;;["-moz-transition;o;	;[o;	;[o;	;"-moz-box-shadow;@	;;;	i²o; 	;"fade_time;"fade-time;@	;	i²;@	;	i²;;o;	;[o;	;"border-color;@	;;;	i²o; 	;"fade_time;"fade-time;@	;	i²o;	;"ease-in-out;@	;;;	i²;@	;	i²;;;@	;	i²;;;@	;	i²;i ;[ o;!;";#;["transition;o;$	;[o;$	;[o;%	;"box-shadow;@;;&;	i´o;	;"fade_time;"fade-time;@;	i´;@;	i´;';(o;$	;[o;%	;"border-color;@;;&;	i´o;	;"fade_time;"fade-time;@;	i´o;%	;"ease-in-out;@;;&;	i´;@;	i´;';(;@;	i´;':
comma;@;	i´;)i ;
[ o;*;+["&:o;	;"selector;"selector;@;	i¶;@;T;	i¶;)i ;
[u; Ë[o:Sass::Script::Variable	:@underscored_name"experimental:
@name"experimental:@options{ :
@linei·0[o:Sass::Tree::PropNode:@prop_syntax:new;["-webkit-box-shadow:@valueo:Sass::Script::List	;[	o:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;i ;@	:@original"0;	i¸o;;@;[ ;i ;@	;"0;	i¸o;;[ ;["px;i
;@	;"5px;	i¸o; 	;"glowing_effect_color;"glowing-effect-color;@	;	i¸;@	;	i¸:@separator:
space;@	;	i¸:
@tabsi :@children[ o;
;;;["-moz-box-shadow;o;	;[	o;;@;[ ;i ;@	;"0;	i¹o;;@;[ ;i ;@	;"0;	i¹o;;[ ;["px;i
;@	;"5px;	i¹o; 	;"glowing_effect_color;"glowing-effect-color;@	;	i¹;@	;	i¹;;;@	;	i¹;i ;[ o;!;";#;["box-shadow;o;$	;[	o;;@t;[ ;i ;@;"0;	i»o;;@t;[ ;i ;@;"0;	i»o;;[ ;["px;i
;@;"5px;	i»o;	;"glowing_effect_color;"glowing-effect-color;@;	i»;@;	i»;';(;@;	i»;)i ;
[ o;!;";#;["border-color;o;	;"glowing_effect_color;"glowing-effect-color;@;	i¼;@;	i¼;)i ;
[ o;
;["8/* We use these to control various global styles */;@;;;	iÀ;
[ o;;o:Sass::Script::Color	;0;@:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;	iÁ;"body-bg;@;	iÁ;
[ ;"!defaulto;;o;>	;0;@;?{	;@i';Ai;Bi';Ci';	iÂ;"body-font-color;@;	iÂ;
[ ;"!defaulto;;o;$	;[
o;%	;"Helvetica Neue;@;:string;	iÃo;%	;"Helvetica;@;;D;	iÃo;%	;"Helvetica;@;;&;	iÃo;%	;"
Arial;@;;&;	iÃo;%	;"sans-serif;@;;&;	iÃ;@;	iÃ;';=;"body-font-family;@;	iÃ;
[ ;"!defaulto;;o;%	;"normal;@;;&;	iÄ;"body-font-weight;@;	iÄ;
[ ;"!defaulto;;o;%	;"normal;@;;&;	iÅ;"body-font-style;@;	iÅ;
[ ;"!defaulto;
;["0/* We use this to control font-smoothing */;@;;;	iÇ;
[ o;;o;%	;"antialiased;@;;&;	iÈ;"font-smoothing;@;	iÈ;
[ ;"!defaulto;
;[":/* We use these to control text direction settings */;@;;;	iÊ;
[ o;;o;%	;"ltr;@;;&;	iË;"text-direction;@;	iË;
[ ;"!defaulto;
;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;@;;;	iÍ;
[ o;;o;%	;"	left;@;;&;	iÎ;"default-float;@;	iÎ;
[ ;"!defaulto;;o;%	;"
right;@;;&;	iÏ;"opposite-direction;@;	iÏ;
[ ;"!defaultu; ¼[o:Sass::Script::Operation
:@options{ :@operator:eq:@operand2o:Sass::Script::String	:@value"ltr;@:
@type:identifier:
@lineiÐ;iÐ:@operand1o:Sass::Script::Variable	:@underscored_name"text_direction:
@name"text-direction;@;iÐu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	:@value"
right:@options{ :
@type:identifier:
@lineiÔ:
@name"default-float;	@
;iÔ:@children[ :@guarded0o; ;o;	;"	left;	@
;
;;iÕ;"opposite-direction;	@
;iÕ;[ ;0[o:Sass::Tree::VariableNode:
@expro;
	;"	left;@;;;iÑ;"default-float;@;iÑ:@children[ :@guarded0o;;o;
	;"
right;@;;;iÒ;"opposite-direction;@;iÒ;[ ;0o;
;["4/* We use these as default colors throughout */;@;;;	iØ;
[ o;;o;>	;0;@;?{	;@i ;Ai;Bi;Ciº;	iÙ;"primary-color;@;	iÙ;
[ ;"!defaulto;;o;>	;0;@;?{	;@iç;Ai;Biç;Ciç;	iÚ;"secondary-color;@;	iÚ;
[ ;"!defaulto;;o;>	;0;@;?{	;@ið;Ai;BiF;Ci);	iÛ;"alert-color;@;	iÛ;
[ ;"!defaulto;;o;>	;0;@;?{	;@iH;Ai;Bi¬;Cio;	iÜ;"success-color;@;	iÜ;
[ ;"!defaulto;;o;>	;0;@;?{	;@ið;Ai;Bi;Ci);	iÝ;"warning-color;@;	iÝ;
[ ;"!defaulto;;o;>	;0;@;?{	;@i ;Ai;BiÓ;Ciè;	iÞ;"info-color;@;	iÞ;
[ ;"!defaulto;
;["W/* We use these to make sure border radius matches unless we want it different. */;@;;;	ià;
[ o;;o;;[ ;["px;i;@;"3px;	iá;"global-radius;@;	iá;
[ ;"!defaulto;;o;;[ ;["px;iè;@;"1000px;	iâ;"global-rounded;@;	iâ;
[ ;"!defaulto;
;["L/* We use these to control inset shadow shiny edges and depressions. */;@;;;	iä;
[ o;;o;$	;[o;;@t;[ ;i ;@;"0;	iåo;;[ ;["px;i;@;"1px;	iåo;;@t;[ ;i ;@;"0;	iå;@;	iå;';(;"shiny-edge-size;@;	iå;
[ ;"!defaulto;;o;;;"	rgba;0;@;[o;>	;0;@;?{	;@iÿ;Ai;Biÿ;Ciÿ;	iæo;;@t;[ ;f0.5;@;"0.5;	iæ;	iæ;<{ ;"shiny-edge-color;@;	iæ;
[ ;"!defaulto;;o;;;"	rgba;0;@;[o;>	;0;@;?{	;@i ;Ai;Bi ;Ci ;	iço;;@t;[ ;f0.20000000000000001 ;@;"0.2;	iç;	iç;<{ ;"shiny-edge-active-color;@;	iç;
[ ;"!defaulto;
;["[/* We use this to control whether or not CSS classes come through in the gem files. */;@;;;	ié;
[ o;;o;;T;@;	iê;"include-html-classes;@;	iê;
[ ;"!defaulto;;o;;T;@;	ië;"include-print-styles;@;	ië;
[ ;"!defaulto;;o;	;"include_html_classes;"include-html-classes;@;	iì;" include-html-global-classes;@;	iì;
[ ;"!defaulto;
;["/* Media Query Ranges */;@;;;	iï;
[ o;;o;$	;[o;
;[ ;["em;i ;@;	iðo;;[ ;["em;i-;@;"	40em;	ið;@;	ið;';=;"small-range;@;	ið;
[ ;0o;;o;$	;[o;
;[ ;["em;f40.063000000000002 Òò;@;	iño;;[ ;["em;iE;@;"	64em;	iñ;@;	iñ;';=;"medium-range;@;	iñ;
[ ;0o;;o;$	;[o;
;[ ;["em;f64.063000000000002 éy;@;	iòo;;[ ;["em;i_;@;"	90em;	iò;@;	iò;';=;"large-range;@;	iò;
[ ;0o;;o;$	;[o;
;[ ;["em;f90.063000000000002 éy;@;	ióo;;[ ;["em;i};@;"
120em;	ió;@;	ió;';=;"xlarge-range;@;	ió;
[ ;0o;;o;
;[ ;["em;f120.063 éy;@;	iô;"xxlarge-range;@;	iô;
[ ;0o;;o;%	;"only screen;@;;D;	i÷;"screen;@;	i÷;
[ ;"!defaulto;;o:&Sass::Script::StringInterpolation
:@beforeo;%	;" ;@;;D;	iù;@:@aftero;%	;"" and (orientation: landscape);@;;D;	iù;	iù:	@mido;	;"screen;"screen;@;	iù;"landscape;@;	iù;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	iú;@;Go;%	;"! and (orientation: portrait);@;;D;	iú;	iú;Ho;	;"screen;"screen;@;	iú;"portrait;@;	iú;
[ ;"!defaulto;;o;	;"screen;"screen;@;	iü;"small-up;@;	iü;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	iý;@;Go;E
;Fo;%	;" and (max-width: ;@;;D;	iý;@;Go;%	;");@;;D;	iý;	iý;Ho;;;"upper-bound;0;@;[o;	;"small_range;"small-range;@;	iý;	iý;<{ ;	iý;Ho;	;"screen;"screen;@;	iý;"small-only;@;	iý;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	iÿ;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	iÿ;@;Go;%	;");@;;D;	iÿ;	iÿ;Ho;;;"lower-bound;0;@;[o;	;"medium_range;"medium-range;@;	iÿ;	iÿ;<{ ;	iÿ;Ho;	;"screen;"screen;@;	iÿ;"medium-up;@;	iÿ;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i ;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i ;@;Go;E
;Fo;%	;") and (max-width:;@;;D;	i ;@;Go;%	;");@;;D;	i ;	i ;Ho;;;"upper-bound;0;@;[o;	;"medium_range;"medium-range;@;	i ;	i ;<{ ;	i ;Ho;;;"lower-bound;0;@;[o;	;"medium_range;"medium-range;@;	i ;	i ;<{ ;	i ;Ho;	;"screen;"screen;@;	i ;"medium-only;@;	i ;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i;@;Go;%	;");@;;D;	i;	i;Ho;;;"lower-bound;0;@;[o;	;"large_range;"large-range;@;	i;	i;<{ ;	i;Ho;	;"screen;"screen;@;	i;"large-up;@;	i;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i;@;Go;E
;Fo;%	;") and (max-width:;@;;D;	i;@;Go;%	;");@;;D;	i;	i;Ho;;;"upper-bound;0;@;[o;	;"large_range;"large-range;@;	i;	i;<{ ;	i;Ho;;;"lower-bound;0;@;[o;	;"large_range;"large-range;@;	i;	i;<{ ;	i;Ho;	;"screen;"screen;@;	i;"large-only;@;	i;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i;@;Go;%	;");@;;D;	i;	i;Ho;;;"lower-bound;0;@;[o;	;"xlarge_range;"xlarge-range;@;	i;	i;<{ ;	i;Ho;	;"screen;"screen;@;	i;"xlarge-up;@;	i;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i;@;Go;E
;Fo;%	;") and (max-width:;@;;D;	i;@;Go;%	;");@;;D;	i;	i;Ho;;;"upper-bound;0;@;[o;	;"xlarge_range;"xlarge-range;@;	i;	i;<{ ;	i;Ho;;;"lower-bound;0;@;[o;	;"xlarge_range;"xlarge-range;@;	i;	i;<{ ;	i;Ho;	;"screen;"screen;@;	i;"xlarge-only;@;	i;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i;@;Go;%	;");@;;D;	i;	i;Ho;;;"lower-bound;0;@;[o;	;"xxlarge_range;"xxlarge-range;@;	i;	i;<{ ;	i;Ho;	;"screen;"screen;@;	i;"xxlarge-up;@;	i;
[ ;"!defaulto;;o;E
;Fo;%	;" ;@;;D;	i	;@;Go;E
;Fo;%	;" and (min-width:;@;;D;	i	;@;Go;E
;Fo;%	;") and (max-width:;@;;D;	i	;@;Go;%	;");@;;D;	i	;	i	;Ho;;;"upper-bound;0;@;[o;	;"xxlarge_range;"xxlarge-range;@;	i	;	i	;<{ ;	i	;Ho;;;"lower-bound;0;@;[o;	;"xxlarge_range;"xxlarge-range;@;	i	;	i	;<{ ;	i	;Ho;	;"screen;"screen;@;	i	;"xxlarge-only;@;	i	;
[ ;"!defaulto;
;["/* Legacy */;@;;;	i;
[ o;;o;	;"medium_up;"medium-up;@;	i;"
small;@;	i;
[ ;0o;;o;	;"medium_up;"medium-up;@;	i;"medium;@;	i;
[ ;0o;;o;	;"large_up;"large-up;@;	i;"
large;@;	i;
[ ;0o;
;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;@;;;	i;
[ o;;o;%	;"crosshair;@;;&;	i;"cursor-crosshair-value;@;	i;
[ ;"!defaulto;;o;%	;"default;@;;&;	i;"cursor-default-value;@;	i;
[ ;"!defaulto;;o;%	;"pointer;@;;&;	i;"cursor-pointer-value;@;	i;
[ ;"!defaulto;;o;%	;"	help;@;;&;	i;"cursor-help-value;@;	i;
[ ;"!defaulto;;o;%	;"	text;@;;&;	i;"cursor-text-value;@;	i;
[ ;"!defaulto:Sass::Tree::MixinNode;"exports;0;@;T;[o;%	;"global;@;;D;	i;	i;<{ ;
[u; [o:Sass::Script::Variable	:@underscored_name"include_open_sans:
@name"include-open-sans:@options{ :
@linei0[o:Sass::Tree::CssImportNode:@value" ;@	:@query[ ;	i:@children[ :	@urio:Sass::Script::Funcall;"url:@splat0;{ :
@args[o:Sass::Script::String	;"Z//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700italic,400,300,700;@:
@type:string;	i;	i:@keywords{ o;
;["/* Used to provide media query values for javascript components.
 * Forward slash placed around everything to convince PhantomJS to read the value. */;@;;;	i;
[ o;*;+["meta.foundation-mq-small;,o;-;.[o;/;.[o;0
;1o;2;3{ ;40;.[o:Sass::Selector::Element	;["	meta:@namespace0;6" ;	io:Sass::Selector::Class;["foundation-mq-small;6@5;	i;6@5;	i;6@5;	i;@;T;	i;)i ;
[o;!;";#;["font-family;o:Sass::Script::Operation
;@:@operator:	plus:@operand2o;%	;"/;@;;D;	i ;	i :@operand1o;M
;@;N;O;Po;;;"unquote;0;@;[o;	;"small_only;"small-only;@;	i ;	i ;<{ ;	i ;Qo;%	;"/;@;;D;	i ;@;	i ;)i ;
[ o;!;";#;["
width;o;;;"lower-bound;0;@;[o;	;"small_range;"small-range;@;	i!;	i!;<{ ;@;	i!;)i ;
[ o;*;+["meta.foundation-mq-medium;,o;-;.[o;/;.[o;0
;1o;2;3{ ;40;.[o;J	;["	meta;K0;6" ;	i$o;L;["foundation-mq-medium;6@d;	i$;6@d;	i$;6@d;	i$;@;T;	i$;)i ;
[o;!;";#;["font-family;o;M
;@;N;O;Po;%	;"/;@;;D;	i%;	i%;Qo;M
;@;N;O;Po;;;"unquote;0;@;[o;	;"medium_only;"medium-only;@;	i%;	i%;<{ ;	i%;Qo;%	;"/;@;;D;	i%;@;	i%;)i ;
[ o;!;";#;["
width;o;;;"lower-bound;0;@;[o;	;"medium_range;"medium-range;@;	i&;	i&;<{ ;@;	i&;)i ;
[ o;*;+["meta.foundation-mq-large;,o;-;.[o;/;.[o;0
;1o;2;3{ ;40;.[o;J	;["	meta;K0;6" ;	i)o;L;["foundation-mq-large;6@;	i);6@;	i);6@;	i);@;T;	i);)i ;
[o;!;";#;["font-family;o;M
;@;N;O;Po;%	;"/;@;;D;	i*;	i*;Qo;M
;@;N;O;Po;;;"unquote;0;@;[o;	;"large_up;"large-up;@;	i*;	i*;<{ ;	i*;Qo;%	;"/;@;;D;	i*;@;	i*;)i ;
[ o;!;";#;["
width;o;;;"lower-bound;0;@;[o;	;"large_range;"large-range;@;	i+;	i+;<{ ;@;	i+;)i ;
[ o;*;+["meta.foundation-mq-xlarge;,o;-;.[o;/;.[o;0
;1o;2;3{ ;40;.[o;J	;["	meta;K0;6" ;	i.o;L;["foundation-mq-xlarge;6@Â;	i.;6@Â;	i.;6@Â;	i.;@;T;	i.;)i ;
[o;!;";#;["font-family;o;M
;@;N;O;Po;%	;"/;@;;D;	i/;	i/;Qo;M
;@;N;O;Po;;;"unquote;0;@;[o;	;"xlarge_up;"xlarge-up;@;	i/;	i/;<{ ;	i/;Qo;%	;"/;@;;D;	i/;@;	i/;)i ;
[ o;!;";#;["
width;o;;;"lower-bound;0;@;[o;	;"xlarge_range;"xlarge-range;@;	i0;	i0;<{ ;@;	i0;)i ;
[ o;*;+["meta.foundation-mq-xxlarge;,o;-;.[o;/;.[o;0
;1o;2;3{ ;40;.[o;J	;["	meta;K0;6" ;	i3o;L;["foundation-mq-xxlarge;6@ñ;	i3;6@ñ;	i3;6@ñ;	i3;@;T;	i3;)i ;
[o;!;";#;["font-family;o;M
;@;N;O;Po;%	;"/;@;;D;	i4;	i4;Qo;M
;@;N;O;Po;;;"unquote;0;@;[o;	;"xxlarge_up;"xxlarge-up;@;	i4;	i4;<{ ;	i4;Qo;%	;"/;@;;D;	i4;@;	i4;)i ;
[ o;!;";#;["
width;o;;;"lower-bound;0;@;[o;	;"xxlarge_range;"xxlarge-range;@;	i5;	i5;<{ ;@;	i5;)i ;
[ u; =[o:Sass::Script::Variable	:@underscored_name" include_html_global_classes:
@name" include-html-global-classes:@options{ :
@linei80["o:Sass::Tree::CommentNode
:@value["F/* Set box-sizing globally to handle padding and border widths */;@	:
@type:silent;	i::@children[ o:Sass::Tree::RuleNode:
@rule["!*,
    *:before,
    *:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Universal:@namespace0:@filename" ;	i=;@;	i=o;;["
o;
;o;;{ ;0;[o;;0;@;	i=o:Sass::Selector::Pseudo
;["before:@syntactic_type:
class;@;	i=:	@arg0;@;	i=o;;["
o;
;o;;{ ;0;[o;;0;@;	i=o;
;["
after;;;@;	i=; 0;@;	i=;@;	i=;@	:@has_childrenT;	i=:
@tabsi ;[o:Sass::Tree::MixinNode;"box-sizing:@splat0;@	:
@args[o:Sass::Script::String	;"border-box;@	;:identifier;	i>;	i>:@keywords{ ;[ o;;["html,
    body;o;;[o;;[o;
;o;;{ ;0;[o:Sass::Selector::Element	;["	html;0;" ;	iB;@H;	iBo;;["
o;
;o;;{ ;0;[o;)	;["	body;0;@H;	iB;@H;	iB;@H;	iB;@	;!T;	iB;"i ;[o:Sass::Tree::PropNode:@prop_syntax:new;["font-size;o; 	;"base_font_size;"base-font-size;@	;	iB;@	;	iB;"i ;[ o;

;["/* Default body styles */;@	;;;	iD;[ o;;["	body;o;;[o;;[o;
;o;;{ ;0;[o;)	;["	body;0;" ;	iE;@m;	iE;@m;	iE;@	;!T;	iE;"i ;[o;*;+;,;["background;o; 	;"body_bg;"body-bg;@	;	iF;@	;	iF;"i ;[ o;*;+;,;["
color;o; 	;"body_font_color;"body-font-color;@	;	iG;@	;	iG;"i ;[ o;*;+;,;["padding;o;&;"0;@	;;';@	;	iH;"i ;[ o;*;+;,;["margin;o;&;"0;@	;;';@	;	iI;"i ;[ o;*;+;,;["font-family;o; 	;"body_font_family;"body-font-family;@	;	iJ;@	;	iJ;"i ;[ o;*;+;,;["font-weight;o; 	;"body_font_weight;"body-font-weight;@	;	iK;@	;	iK;"i ;[ o;*;+;,;["font-style;o; 	;"body_font_style;"body-font-style;@	;	iL;@	;	iL;"i ;[ o;*;+;,;["line-height;o;&;"1;@	;;';@	;	iM;"i ;[ o;

;["F/* Set to $base-line-height to take on browser default of 150% */;@	;;;	iM;[ o;*;+;,;["position;o;&;"relative;@	;;';@	;	iN;"i ;[ o;*;+;,;["cursor;o; 	;"cursor_default_value;"cursor-default-value;@	;	iO;@	;	iO;"i ;[ o;;["a:hover;o;;[o;;[o;
;o;;{ ;0;[o;)	;["a;0;" ;	iRo;
;["
hover;;;@¾;	iR; 0;@¾;	iR;@¾;	iR;@	;!T;	iR;"i ;[o;*;+;,;["cursor;o; 	;"cursor_pointer_value;"cursor-pointer-value;@	;	iR;@	;	iR;"i ;[ o;

;["B/* Grid Defaults to get images and embeds to work properly */;@	;;;	iT;[ o;;["img,
    object,
    embed;o;;[o;;[o;
;o;;{ ;0;[o;)	;["img;0;" ;	iW;@Ü;	iWo;;["
o;
;o;;{ ;0;[o;)	;["object;0;@Ü;	iW;@Ü;	iWo;;["
o;
;o;;{ ;0;[o;)	;["
embed;0;@Ü;	iW;@Ü;	iW;@Ü;	iW;@	;!T;	iW;"i ;[o;*;+;,;["max-width;o;&;"	100%;@	;;';@	;	iW;"i ;[ o;*;+;,;["height;o;&;"	auto;@	;;';@	;	iW;"i ;[ o;;["object,
    embed;o;;[o;;[o;
;o;;{ ;0;[o;)	;["object;0;" ;	iZ;@;	iZo;;["
o;
;o;;{ ;0;[o;)	;["
embed;0;@;	iZ;@;	iZ;@;	iZ;@	;!T;	iZ;"i ;[o;*;+;,;["height;o;&;"	100%;@	;;';@	;	iZ;"i ;[ o;;["img;o;;[o;;[o;
;o;;{ ;0;[o;)	;["img;0;" ;	i[;@,;	i[;@,;	i[;@	;!T;	i[;"i ;[o;*;+;,;["-ms-interpolation-mode;o;&;"bicubic;@	;;';@	;	i[;"i ;[ o;;["!#map_canvas,
    .map_canvas;o;;[o;;[o;
;o;;{ ;0;[o:Sass::Selector::Id;["map_canvas;" ;	i^;@B;	i^o;;["
o;
;o;;{ ;0;[o:Sass::Selector::Class;["map_canvas;@B;	i^;@B;	i^;@B;	i^;@	;!T;	i^;"i ;[o;;["#img,
      embed,
      object;o;;[o;;[o;
;o;;{ ;0;[o;)	;["img;0;" ;	ia;@\;	iao;;["
o;
;o;;{ ;0;[o;)	;["
embed;0;@\;	ia;@\;	iao;;["
o;
;o;;{ ;0;[o;)	;["object;0;@\;	ia;@\;	ia;@\;	ia;@	;!T;	ia;"i ;[o;*;+;,;["max-width;o;&;"none !important;@	;;';@	;	ia;"i ;[ o;

;[",/* Miscellaneous useful HTML classes */;@	;;;	ie;[ o;;["
.left;o;;[o;;[o;
;o;;{ ;0;[o;.;["	left;" ;	if;@;	if;@;	if;@	;!T;	if;"i ;[o;*;+;,;["
float;o;&;"left !important;@	;;';@	;	if;"i ;[ o;;[".right;o;;[o;;[o;
;o;;{ ;0;[o;.;["
right;" ;	ig;@ ;	ig;@ ;	ig;@	;!T;	ig;"i ;[o;*;+;,;["
float;o;&;"right !important;@	;;';@	;	ig;"i ;[ o;;[".clearfix;o;;[o;;[o;
;o;;{ ;0;[o;.;["clearfix;" ;	ih;@¶;	ih;@¶;	ih;@	;!T;	ih;"i ;[o;#;"clearfix;$0;@	;%[ ;	ih;({ ;[ o;;[".text-left;o;;[o;;[o;
;o;;{ ;0;[o;.;["text-left;" ;	ii;@Ë;	ii;@Ë;	ii;@	;!T;	ii;"i ;[o;*;+;,;["text-align;o;&;"left !important;@	;;';@	;	ii;"i ;[ o;;[".text-right;o;;[o;;[o;
;o;;{ ;0;[o;.;["text-right;" ;	ij;@á;	ij;@á;	ij;@	;!T;	ij;"i ;[o;*;+;,;["text-align;o;&;"right !important;@	;;';@	;	ij;"i ;[ o;;[".text-center;o;;[o;;[o;
;o;;{ ;0;[o;.;["text-center;" ;	ik;@÷;	ik;@÷;	ik;@	;!T;	ik;"i ;[o;*;+;,;["text-align;o;&;"center !important;@	;;';@	;	ik;"i ;[ o;;[".text-justify;o;;[o;;[o;
;o;;{ ;0;[o;.;["text-justify;" ;	il;@;	il;@;	il;@	;!T;	il;"i ;[o;*;+;,;["text-align;o;&;"justify !important;@	;;';@	;	il;"i ;[ o;;["
.hide;o;;[o;;[o;
;o;;{ ;0;[o;.;["	hide;" ;	im;@#;	im;@#;	im;@	;!T;	im;"i ;[o;*;+;,;["display;o;&;"	none;@	;;';@	;	im;"i ;[ o;

;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;@	;;;	io;[ o;;[".antialiased;o;;[o;;[o;
;o;;{ ;0;[o;.;["antialiased;" ;	is;@=;	is;@=;	is;@	;!T;	is;"i ;[o;*;+;,;["-webkit-font-smoothing;o;&;"antialiased;@	;;';@	;	is;"i ;[ o;

;["W/* Get rid of gap under images by making them display: inline-block; by default */;@	;;;	iu;[ o;;["img;o;;[o;;[o;
;o;;{ ;0;[o;)	;["img;0;" ;	iv;@W;	iv;@W;	iv;@	;!T;	iv;"i ;[o;*;+;,;["display;o;&;"inline-block;@	;;';@	;	iw;"i ;[ o;*;+;,;["vertical-align;o;&;"middle;@	;;';@	;	ix;"i ;[ o;

;["(/*
 * Global resets for forms
 * */;@	;;;	i{;[ o;

;[";/* Make sure textarea takes on height automatically */;@	;;;	i;[ o;;["textarea;o;;[o;;[o;
;o;;{ ;0;[o;)	;["textarea;0;" ;	i;@{;	i;@{;	i;@	;!T;	i;"i ;[o;*;+;,;["height;o;&;"	auto;@	;;';@	;	i;"i ;[ o;*;+;,;["min-height;o;&;"	50px;@	;;';@	;	i;"i ;[ o;

;["5/* Make select elements 100% width by default */;@	;;;	i;[ o;;["select;o;;[o;;[o;
;o;;{ ;0;[o;)	;["select;0;" ;	i;@;	i;@;	i;@	;!T;	i;"i ;[o;*;+;,;["
width;o;&;"	100%;@	;;';@	;	i;"i ;[ 